name: Publish Spring Boot Docker Image

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

permissions:
  contents: 'read'
  id-token: 'write'

env:
  # GKE cluster configuration-11
  REGISTRY: ghcr.io
  GKE_CLUSTER: sample-test
  GKE_ZONE: asia-east1-a # e.g., us-central1-c
  PROJECT_ID: for-tech-practice
  
  # GHCR image details
  GHCR_IMAGE: ghcr.io/${{ github.repository }}
  GHCR_IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven # or 'gradle'

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }} # Or use GITHUB_TOKEN for public repos


      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.GHCR_IMAGE }}:${{ env.GHCR_IMAGE_TAG }}

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/183944825075/locations/global/workloadIdentityPools/github-p/providers/github'
          service_account: 'github-actions-sa@for-tech-practice.iam.gserviceaccount.com'

      - name: Deploy to GKE
        run: |
         gcloud container clusters get-credentials sample-test --region asia-east1 --project for-tech-practice
         
      - name: Deploy to GKE
        run: |
         sed -i "s|image: .*|image: ${{ env.GHCR_IMAGE }}:${{ GHCR_IMAGE_TAG }}|" k8s/deployment.yaml
         kubectl apply -f k8s/deployment.yml --validate=false
         kubectl set image deployment/sample-test-api sample-container=${{ env.GHCR_IMAGE }}:${{ env.GHCR_IMAGE_TAG }}
         